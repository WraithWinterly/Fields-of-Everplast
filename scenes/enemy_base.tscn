[gd_scene load_steps=15 format=2]

[ext_resource path="res://scripts/enemy_base.gd" type="Script" id=1]
[ext_resource path="res://assets/highUp.ogg" type="AudioStream" id=2]

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 4, 2.5 )

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 4, 4 )

[sub_resource type="SpriteFrames" id=3]
animations = [ {
"frames": [  ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="Animation" id=4]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1, 0.2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, 3.2 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=12]
resource_name = "death_invert"
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( -1, 1 ), Vector2( -1, 0.2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, 3.2 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=5]
length = 0.3
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( -1, 1 ) ]
}

[sub_resource type="Animation" id=6]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1, 0.4 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, 2.5 ), Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=7]
resource_name = "hurt_invert"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( -1, 1 ), Vector2( -1, 0.4 ), Vector2( -1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, 2.5 ), Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=8]
length = 0.3
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( -1, 1 ) ]
}

[sub_resource type="DynamicFontData" id=9]
font_path = "res://assets/ui/minimal_5x7.ttf"

[sub_resource type="DynamicFont" id=10]
size = 15
font_data = SubResource( 9 )

[sub_resource type="Animation" id=11]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:custom_colors/font_color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:rect_position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, -15 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[node name="EnemyBase" type="KinematicBody2D"]
collision_layer = 2
collision_mask = 2
script = ExtResource( 1 )
__meta__ = {
"_edit_group_": true
}

[node name="VisibilityEnabler2D" type="VisibilityEnabler2D" parent="."]
rect = Rect2( 0, 0, 8, 8 )
pause_animations = false
freeze_bodies = false
pause_particles = false
pause_animated_sprites = false

[node name="VisibilityNotifier2D" type="VisibilityNotifier2D" parent="."]
rect = Rect2( 0, 0, 8, 8 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 4, 4 )
shape = SubResource( 1 )
__meta__ = {
"_edit_group_": true
}

[node name="HitArea" type="Area2D" parent="."]
monitoring = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="HitArea"]
visible = false
position = Vector2( 4, 4.5 )
shape = SubResource( 2 )

[node name="SpriteHolder" type="Node2D" parent="."]
position = Vector2( 4, 4 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="SpriteHolder"]
frames = SubResource( 3 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="SpriteHolder/AnimatedSprite"]
anims/death = SubResource( 4 )
anims/death_invert = SubResource( 12 )
anims/flip = SubResource( 5 )
anims/hurt = SubResource( 6 )
anims/hurt_invert = SubResource( 7 )

[node name="FlipAnimationPlayer" type="AnimationPlayer" parent="SpriteHolder/AnimatedSprite"]
anims/flip = SubResource( 8 )

[node name="Timer" type="Timer" parent="."]
process_mode = 0
wait_time = 6.0
one_shot = true
autostart = true

[node name="RayCastFloor" type="RayCast2D" parent="."]
position = Vector2( 10, 4 )
enabled = true
cast_to = Vector2( 0, 5 )
collision_mask = 4

[node name="RayCastWall" type="RayCast2D" parent="."]
position = Vector2( 4, 4 )
enabled = true
cast_to = Vector2( 7, 0 )
collision_mask = 6

[node name="Label" type="Label" parent="."]
visible = false
margin_top = -15.0
margin_right = 40.0
margin_bottom = -1.0
rect_scale = Vector2( 0.5, 0.5 )
custom_fonts/font = SubResource( 10 )
custom_colors/font_color = Color( 1, 1, 1, 0 )
text = "1"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="Label"]
anims/label = SubResource( 11 )

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 2 )
volume_db = 5.0
[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
