[gd_scene load_steps=7 format=2]

[ext_resource path="res://assets/sign.png" type="Texture" id=1]
[ext_resource path="res://scripts/sign.gd" type="Script" id=2]

[sub_resource type="DynamicFontData" id=1]
font_path = "res://assets/ui/minimal_5x7.ttf"

[sub_resource type="DynamicFont" id=2]
outline_size = 1
outline_color = Color( 0.360784, 0.309804, 0.211765, 1 )
font_data = SubResource( 1 )

[sub_resource type="Animation" id=3]
resource_name = "show"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Label:rect_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( -15, 0 ), Vector2( -15, -20 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Label:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="CircleShape2D" id=4]
radius = 12.0416

[node name="Sign" type="Node2D"]
z_index = 5
script = ExtResource( 2 )

[node name="Sign" type="Sprite" parent="."]
texture = ExtResource( 1 )
centered = false
hframes = 3
region_rect = Rect2( 45, 63, 8, 8 )

[node name="Label" type="Label" parent="Sign"]
modulate = Color( 1, 1, 1, 0 )
margin_left = -15.0
margin_right = 65.0
margin_bottom = 23.0
rect_scale = Vector2( 0.5, 0.5 )
custom_fonts/font = SubResource( 2 )
text = "This is sign text!"
align = 1
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="Sign"]
anims/show = SubResource( 3 )

[node name="CollisionShape2D" type="Area2D" parent="Sign"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Sign/CollisionShape2D"]
position = Vector2( 4, -4 )
shape = SubResource( 4 )
[connection signal="body_entered" from="Sign/CollisionShape2D" to="." method="_on_CollisionShape2D_body_entered"]
[connection signal="body_exited" from="Sign/CollisionShape2D" to="." method="_on_CollisionShape2D_body_exited"]
